var E=Object.defineProperty,R=Object.defineProperties;var Q=Object.getOwnPropertyDescriptors;var B=Object.getOwnPropertySymbols;var U=Object.prototype.hasOwnProperty,$=Object.prototype.propertyIsEnumerable;var K=(s,t,r)=>t in s?E(s,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[t]=r,N=(s,t)=>{for(var r in t||(t={}))U.call(t,r)&&K(s,r,t[r]);if(B)for(var r of B(t))$.call(t,r)&&K(s,r,t[r]);return s},I=(s,t)=>R(s,Q(t));import{_ as M,d as F,a as P,o as q,c as w,n as y,b as T,F as L,r as D,u as m,e as S,w as W,f as _,g as G,h as O,i as V}from"./vendor.55f92e7b.js";var A=(s=>(s.ROOK="r",s.KNIGHT="n",s.BISHOP="b",s.KING="k",s.QUEEN="q",s.PAWN="p",s))(A||{}),g=(s=>(s.WHITE="w",s.BLACK="b",s))(g||{}),b=(s=>(s.KINGSIDE="k",s.QUEENSIDE="q",s))(b||{});class C{static create(t,r){const e=/\s*^(((?:[rnbqkpRNBQKP1-8]+\/){7})[rnbqkpRNBQKP1-8]+)\s([b|w])\s([K|Q|k|q]{1,4})\s(-|[a-h][1-8])\s(\d+\s\d+)$/;if(!t.match(e))return{board:[],activeColor:"w"};let o=new Array(8).fill(0).map(c=>new Array(8));for(let c=0;c<8;c++)for(let i=0;i<8;i++)o[c][i]={piece:null,dragged:!1,active:!1,legalMove:!1};let n=t.split(" "),a=n[1]=="w"?"w":"b";n[2],n[3],n[4],n[5];let p=n[0].split("/");for(let c=0;c<8;c++){let i=p[c];for(let l=0;l<8;l++){let h=i[0];i=i.substring(1),["k","q","b","n","p","r"].includes(h.toLowerCase())?o[c][l].piece={type:h.toLowerCase(),color:h===h.toLowerCase()?"b":"w",square:[c,l]}:l+=parseInt(h)-1}}return{board:o,activeColor:a}}static getPieces(t,r){let e=[];for(let o=0;o<8;o++)for(let n=0;n<8;n++)t[o][n].piece&&t[o][n].piece.color===r&&e.push(t[o][n].piece);return e}static getFen(t,r,e,o,n,a){let p=[];for(let u=0;u<8;u++){let v="",d=0;for(let f=0;f<8;f++)if(t[u][f].piece){const{type:k,color:H}=t[u][f].piece;v+=H==="b"?k:k.toUpperCase(),d=0}else d++;d>0&&(v+=d),p.push(v)}const c=p.join("/");let i="";r.w.includes("k")&&(i+="k".toUpperCase()),r.w.includes("q")&&(i+="q".toUpperCase()),r.b.includes("k")&&(i+="k"),r.b.includes("q")&&(i+="q"),i||(i="-");let l="-";if(a.piece.type==="p"&&Math.abs(a.from[0]-a.to[0])===2){const u=a.piece.color==="w"?1:-1,v=7-a.to[0]+1+u;l=`${String.fromCharCode("a".charCodeAt(0)+a.to[1])}${v}`}return[c,n,i,l,e,o].join(" ")}static updateCastlingRights(t,r,e){const o=r==="w"?7:0;return t[o][4].piece?(t[o][7].piece||M.pull(e,"k"),t[o][0].piece||M.pull(e,"q"),e):[]}static canCastle(t,r,e){const o=r==="w"?7:0;let n=[[o,5],[o,6]];e==="q"&&(n=[[o,1],[o,2],[o,3]]);for(const[a,p]of n)if(t[a][p].piece)return!1;return!0}static computeLegalMoves(t,[r,e],o,n){let a=[];const p=t[r][e].piece;if(!p)return a;const c=p.color==="w"?"b":"w",i=this.computePseudoLegalMoves(t,[r,e],o,n);for(const[l,h]of i){let u=JSON.parse(JSON.stringify(t));u=this.makeMove(u,[r,e],[l,h]);let v=[0,0];for(let d=0;d<8;d++)for(let f=0;f<8;f++)if(u[d][f].piece&&u[d][f].piece.type==="k"&&u[d][f].piece.color===p.color){v=[d,f];break}this.isSquareAttacked(u,c,v)||a.push([l,h])}return a}static makeMove(t,[r,e],[o,n]){return t[r][e].piece&&(t[o][n].piece=t[r][e].piece,t[r][e].piece=null),t}static computePseudoLegalMoves(t,[r,e],o,n){const a=t[r][e].piece,p=a.color==="w",c=a.color==="w"?"b":"w";let i=[];if(a.type=="p"){let l=-1;if(p||(l=1),p&&r>0||!p&&r<7){t[r+l][e].piece||(i.push([r+l,e]),(p&&r===6||!p&&r===1)&&!t[r+2*l][e].piece&&i.push([r+2*l,e])),e>0&&t[r+l][e-1].piece&&t[r+l][e-1].piece.color===c&&i.push([r+l,e-1]),e<7&&t[r+l][e+1].piece&&t[r+l][e+1].piece.color===c&&i.push([r+l,e+1]);const h=p?1:6,u=p?3:4;if(r===u&&n.piece.type==="p"&&n.piece.color===c){const[v,d]=n.from,[f,k]=n.to;v===h&&f===u&&(k===e+1||k===e-1)&&i.push([r+l,k])}}}else{let l=new Array(4).fill(!1);["q","k"].includes(a.type)&&(l=new Array(8).fill(!1));let h=Math.max(Math.max(r,7-r),Math.max(e,7-e));["k","n"].includes(a.type)&&(h=1);for(let u=1;u<=h&&l.includes(!1);u++){let v=[];if(v.b=[[r-u,e-u],[r-u,e+u],[r+u,e-u],[r+u,e+u]],v.r=[[r,e-u],[r,e+u],[r-u,e],[r+u,e]],v.n=[[r-2,e-1],[r-2,e+1],[r+2,e-1],[r+2,e+1],[r-1,e-2],[r-1,e+2],[r+1,e-2],[r+1,e+2]],v.q=v.k=[...v.b,...v.r],o[a.color]&&(r===7||r===0)&&e===4){const d=["k","q"];for(const f of d)if(o[a.color].includes(f)&&this.canCastle(t,a.color,f)){const k=f==="k"?2:-2;v.k.push([r,e+k])}}v[a.type].forEach(([d,f],k)=>{!l[k]&&0<=d&&d<=7&&0<=f&&f<=7&&(t[d][f].piece?(l[k]=!0,t[d][f].piece.color===c&&i.push([d,f])):i.push([d,f]))})}}return i}static getActiveSquare(t){for(let r=0;r<8;r++)for(let e=0;e<8;e++)if(t[r][e].active)return[r,e];return null}static isSquareAttacked(t,r,[e,o]){for(let n=0;n<2;n++){const a=[[[e-1,o-1],[e-1,o+1]],[[e-2,o-1],[e-2,o+1],[e+2,o-1],[e+2,o+1],[e-1,o-2],[e-1,o+2],[e+1,o-2],[e+1,o+2]]];for(let p=0;p<a[n].length;p++){const[c,i]=a[n][p];if(0<=c&&c<=7&&0<=i&&i<=7&&t[c][i].piece&&t[c][i].piece.color===r&&(n===0&&t[c][i].piece.type==="p"||n===1&&t[c][i].piece.type==="n"))return!0}}for(let n=0;n<2;n++){let a=new Array(4).fill(!1),p=Math.max(Math.max(e,7-e),Math.max(o,7-o));for(let c=1;c<=p&&a.includes(!1);c++){let i=[[[e-c,o-c],[e-c,o+c],[e+c,o-c],[e+c,o+c]],[[e,o-c],[e,o+c],[e-c,o],[e+c,o]]];for(let l=0;l<4;l++){const[h,u]=i[n][l];if(!a[l]&&0<=h&&h<=7&&0<=u&&u<=7&&t[h][u].piece){if(t[h][u].piece.color===r&&(n===0&&["b","q"].includes(t[h][u].piece.type)||n===1&&["r","q"].includes(t[h][u].piece.type)))return!0;a[l]=!0}}}}return!1}}const J=F({id:"board",state:()=>{const{board:s}=C.create("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",!0),t=C.getPieces(s,g.WHITE),r=C.getPieces(s,g.BLACK),e={[g.WHITE]:[b.KINGSIDE,b.QUEENSIDE],[g.BLACK]:[b.KINGSIDE,b.QUEENSIDE]},o={piece:null,from:[0,0],to:[0,0]},n=t.map(a=>C.computeLegalMoves(s,a.square,e,o));return{board:s,color:g.WHITE,currentTurnColor:g.WHITE,inCheck:!1,castlingRights:e,pieces:{[g.WHITE]:t,[g.BLACK]:r},legalMoves:n,halfmoves:0,fullmoves:0,lastMove:o}},actions:{newGame(s){const{board:t,activeColor:r}=C.create("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",s);this.color=s?g.WHITE:g.BLACK,this.board=t,this.currentTurnColor=r,this.pieces={[g.WHITE]:C.getPieces(t,g.WHITE),[g.BLACK]:C.getPieces(t,g.BLACK)}},pieceMouseDown([s,t]){if(this.board[s][t].piece&&this.board[s][t].piece.color==this.currentTurnColor){this.board[s][t].active=!0;const r=M.findIndex(this.pieces[this.currentTurnColor],e=>e.square[0]===s&&e.square[1]===t);if(r>=0)for(const[e,o]of this.legalMoves[r])this.board[e][o].legalMove=!0}},pieceMouseUp(){for(let s=0;s<8;s++)for(let t=0;t<8;t++)this.board[s][t].dragged=!1,this.board[s][t].active=!1,this.board[s][t].legalMove=!1},pieceMove([s,t]){const r=C.getActiveSquare(this.board);if(r&&this.board[s][t].legalMove){const[e,o]=r,n=this.currentTurnColor===g.WHITE?g.BLACK:g.WHITE;if(s===e&&(e===7||e===0)&&o===4&&Math.abs(o-t)===2){const p=t===6?7:0,c=t===6?5:3;this.board[s][c].piece=this.board[s][p].piece,this.board[s][p].piece=null}this.board[e][o].piece.type===A.PAWN&&!this.board[s][t].piece&&t!=o&&(this.currentTurnColor===this.color?this.board[s+1][t].piece=null:this.board[s-1][t].piece=null),this.currentTurnColor===g.BLACK&&(this.fullmoves++,this.halfmoves++),(this.board[e][o].piece.type===A.PAWN||this.board[s][t].piece)&&(this.halfmoves=0),this.lastMove={piece:this.board[e][o].piece,from:[e,o],to:[s,t]};const a=M.findIndex(this.pieces[this.currentTurnColor],p=>p.square[0]===e&&p.square[1]===o);a>=0&&(this.pieces[this.currentTurnColor][a].square=[s,t],this.board[s][t].piece&&M.remove(this.pieces[n],p=>p.square[0]===s&&p.square[1]===t),this.board[s][t].piece=this.board[e][o].piece,this.board[e][o].piece=null),this.castlingRights[this.currentTurnColor]&&(this.castlingRights[this.currentTurnColor]=C.updateCastlingRights(this.board,this.currentTurnColor,this.castlingRights[this.currentTurnColor])),this.currentTurnColor=this.currentTurnColor===g.WHITE?g.BLACK:g.WHITE,this.legalMoves=this.pieces[this.currentTurnColor].map(p=>C.computeLegalMoves(this.board,p.square,this.castlingRights[this.currentTurnColor],this.lastMove)),this.legalMoves.find(p=>p.length)||alert("Checkmate!"),this.pieceMouseUp()}else this.pieceMouseUp()}}}),z={methods:{startDrag(s){s.dataTransfer.dropEffect="move",s.dataTransfer.effectAllowed="move"}}},X=P(I(N({},z),{props:{piece:null,flip:{type:Boolean}},emits:["pieceMouseDown"],setup(s){return(t,r)=>s.piece?(q(),w("div",{key:0,class:y(["piece",[`${s.piece.color}${s.piece.type}`,s.flip?"flip-piece":""]]),onMousedown:r[0]||(r[0]=e=>t.$emit("pieceMouseDown")),onDragstart:r[1]||(r[1]=e=>t.startDrag(e)),draggable:"true"},null,34)):T("",!0)}})),Z={class:"row"},Y=["onDrop"],j=P({setup(s){const t=J(),{board:r,color:e,pieceMouseUp:o,pieceMouseDown:n,pieceMove:a}=t;return(p,c)=>(q(),w("div",{id:"chessboard",onMouseup:c[2]||(c[2]=(...i)=>m(o)&&m(o)(...i)),class:y(m(e)==="b"?"flip":"")},[(q(),w(L,null,D(8,i=>S("div",Z,[(q(),w(L,null,D(8,l=>S("div",{class:y(["square",m(r)[i-1][l-1].active?"active":""]),onDrop:h=>m(a)([i-1,l-1]),onDragover:c[0]||(c[0]=W(()=>{},["prevent"])),onDragenter:c[1]||(c[1]=W(()=>{},["prevent"]))},[m(r)[i-1][l-1].legalMove?(q(),w("div",{key:0,class:y(m(r)[i-1][l-1].piece?"capture":"move")},null,2)):T("",!0),m(r)[i-1][l-1].piece?(q(),_(X,{key:1,piece:m(r)[i-1][l-1].piece,square:[i-1,l-1],flip:m(e)==="b",onPieceMouseDown:h=>m(n)([i-1,l-1])},null,8,["piece","square","flip","onPieceMouseDown"])):T("",!0)],42,Y)),64))])),64))],34))}});const ee=P({setup(s){return(t,r)=>(q(),w("main",null,[G(j)]))}}),x=O(ee);x.use(V());x.mount("#app");
